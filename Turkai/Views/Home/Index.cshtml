@using Turkai.Model.ExtensionModel.ElasticSearch;
@model List<ElasticImportModel>

<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>

<h1>Data List</h1>
<div id="errorPopup" style="display: none;">
    <p id="errorText" style="background:#fff0f0;color:red;height:50px;"></p>
</div>


@if(Model is null || !Model.Any()){
    <div>Not found Product</div>
}else{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Detail</th>
                <th>Count</th>
                <th>Added Basket</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in Model)
            {
                <tr>
                    <td>@data.Id</td>
                    <td>@data.Title</td>
                    <td>
                        <a class="btn btn-primary" id="detailButton" onclick="GetDetail(@data.Id)" data-id="@data.Id">Detail</a>
                    </td>
                    <td><input type="text" id="basketSize-@data.Id" value="1"></input></td>
                    <td>
                        <a class="btn btn-primary" id="detailButton" onclick="AddedSepet(@data.Id,'@data.Title')" data-id="@data.Id">Add Basket</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}


<script>

    function GetDetail(Id){
                console.log("sela")
        window.location.href = "Home/Detail/" + Id;

    }

    function AddedSepet(Id, Title) {
       var count = document.getElementById("basketSize-"+Id).value
        $("#errorText").text("");
        $("#errorPopup").hide();
        $.ajax({
            url: "/Home/BasketCheck",
            type: "POST",
            data: {
                basketDetail: [{
                    Id: Id,
                    Title : Title,
                    Count: count
                }]
            },
            success: function (result) {
                console.log(result.checkStock)
                if (result.checkStock == false) {
                    $("#errorText").text(result.title + " stock quantity is not enough");
                    $("#errorPopup").show();
                } else {
                    AddedLocalStorage({
                        Id: Id,
                        Title: Title,
                        Count: parseInt(count)
                    }, Id)
                    console.log("Sonuç: " + result);
                }
            },
            error: function (xhr, status, error) {

                console.error("Hata: " + error);
            }
        });
    }


    function AddedLocalStorage(data,Id){
        var LocalData = JSON.parse(localStorage.getItem("Basket"));
        if (LocalData) {
            console.log(LocalData)
            var existingItemIndex = LocalData.findIndex(function (item) {
                return item.Id === Id;
            });

            if (existingItemIndex !== -1) {

                LocalData[existingItemIndex].Count += data.Count;
            } else {

                LocalData.push(data);
            }
        } else {

            LocalData = [data];
        }
        localStorage.setItem("Basket", JSON.stringify(LocalData));

    }
</script>